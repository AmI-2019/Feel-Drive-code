import requests
import time

#azzurro

def custom(hue, bri):
    if type(all_the_lights) is dict:
        # iterate over the Hue lights, turn them on with the color loop effect
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, "hue": hue, 'bri': bri}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)



def sad():
    if type(all_the_lights) is dict:
        # iterate over the Hue lights, turn them on with the color loop effect
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, "hue":46920, "bri":65}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)

#arancione
def happy():
    if type(all_the_lights) is dict:
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, "hue":8000, "bri":30}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)


#rosso
def angry():
    if type(all_the_lights) is dict:
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, "hue": 0, "bri":15}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)


#viola
def purple():
    if type(all_the_lights) is dict:
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, "hue": 56000, "bri":15}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)


#verde
def green():
    if type(all_the_lights) is dict:
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, "hue": 22000, "bri":50}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)


def party():
    if type(all_the_lights) is dict:
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': True, 'effect': 'colorloop'}
            # more colors: https://www.developers.meethue.com/documentation/core-concepts
            requests.put(url_to_call, json=body)


def off():
    if type(all_the_lights) is dict:
        for light in all_the_lights:
            url_to_call = lights_url + light + '/state'
            body = {'on': False}
            requests.put(url_to_call, json=body)


#demo
if __name__ == '__main__':

    # the base URL
    base_url = 'http://192.168.0.201'
    # if you are using the emulator, probably the base_url will be:
    #base_url = 'http://localhost:8000'

    # example username, generated by following https://developers.meethue.com/develop/get-started-2/
    username = "GtmODLN6GK9MXxcoxkvRJuIhQvdjzXSOPW77IRGL"
    # if you are using the emulator, the username is:
    #username = 'newdeveloper'

    # lights URL
    lights_url = base_url + '/api/' + username + '/lights/'

    # get the Hue lights (as JSON)
    all_the_lights = requests.get(lights_url).json()
    sad()
    time.sleep(2)
    happy()
    time.sleep(2)
    green()
    time.sleep(2)
    angry()
    time.sleep(2)
    purple()
    #party()
    time.sleep(2)
    off()



